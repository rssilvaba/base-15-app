{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-20ac6f1e2334bf70b9df18f5c7b39ad134d4e974de063210ecd689c0e54f22d180d5de86db2ac1f2187109c8dc6850cc98ff249921f9f77949172a43fb5557d9",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlbatrossContainerComponent",
            "id": "component-AlbatrossContainerComponent-add3d0763073255bf5d3e8ef41c480a559285445d46ad93681f3914c91b969f383b350b6e274c883d64a5cbf07aec547eed04f7a9de714a91cfffb2e648166e5",
            "file": "src/components/layout/albatross-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[cpt-albatross]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\n\r\nconst Classes = 'inline-block [&>*]:min-w-[clamp(var(--min-width,0px),(var(--breakpoint)-100%)*999,100%-var(--gutter,0px))]';\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[cpt-albatross]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class AlbatrossContainerComponent {\r\n  // @Input()\r\n  // checked = false;\r\n\r\n  // @HostBinding('attr.checked')\r\n  // get checked_() {\r\n  //   return this.checked ? true : null;\r\n  // }\r\n\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  // @HostBinding('attr.type')\r\n  // type = 'checkbox';\r\n\r\n  // @Input()\r\n  // @HostBinding('indeterminate')\r\n  // indeterminate = false;\r\n\r\n  // get indeterminate_() {\r\n  //   // debugger;\r\n  //   return this.indeterminate ? true : null;\r\n  // }\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `flex flex-wrap [--breakpoint:360px] ${this.class} AlbatrossContainer ${Classes}`;\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.elementRef.nativeElement.indeterminate = this.indeterminate;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            }
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3ae7345306e88658eb6fa9472acc8bdf4c5a9ac36569952806128a673c42b9d4b390e5fe2e6f2e138c3b09e200223d495fc7e7f6de897d224804dff4920e93b1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'base-15-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  standalone: true,\r\n  imports: [],\r\n})\r\nexport class AppComponent {\r\n  title = 'base-15-app';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<input cpt-checkbox-input id=\"test2\" class=\"dwr\" />"
        },
        {
            "name": "BlockContainerComponent",
            "id": "component-BlockContainerComponent-a00dc5cc2055bed356109263d0f14ba86db99ad9d78aeaee52234ae21c1986963112d029365416b6bdf592c6a6ad1fc62abe1a08540a8b754ad4902972ab6745",
            "file": "src/components/layout/block-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[cpt-block]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[cpt-block]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class BlockContainerComponent {\r\n  // @Input()\r\n  // checked = false;\r\n\r\n  // @HostBinding('attr.checked')\r\n  // get checked_() {\r\n  //   return this.checked ? true : null;\r\n  // }\r\n\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  // @HostBinding('attr.type')\r\n  // type = 'checkbox';\r\n\r\n  // @Input()\r\n  // @HostBinding('indeterminate')\r\n  // indeterminate = false;\r\n\r\n  // get indeterminate_() {\r\n  //   // debugger;\r\n  //   return this.indeterminate ? true : null;\r\n  // }\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `${this.class} BlockContainer`;\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.elementRef.nativeElement.indeterminate = this.indeterminate;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-dcec6c8e1c08da5f7f41b43d18f99db9ef2fb168ed956fc26614f11ee846e215f31c613324dc7f3bf85cf86001aad871cb8e45da317687d66bc9e4ae0a9d7341",
            "file": "src/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[cpt-btn]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"label\">\n  {{ label }}\n</ng-container>\n<ng-container *ngIf=\"!label\">\n  <ng-content></ng-content>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean | null",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "attr.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport type { ArgTypes } from '@storybook/angular';\r\n\r\nconst buttonDefaultStyles = 'min-w-[35px] border max-w-fit rounded';\r\n\r\nconst buttonActiveStyles = '[&:not(:disabled)]:active:shadow-inner2';\r\nexport const buttonDisabledStyles = {\r\n  primary:\r\n    'disabled:cursor-not-allowed  disabled:bg-[color:#999999] disabled:border-[color:#999999] disabled:text-white',\r\n  secondary:\r\n    'disabled:cursor-not-allowed  disabled:bg-white disabled:border-[color:#999999] disabled:text-[color:#999999]',\r\n};\r\nconst buttonFocusStyles = '[&:not(:disabled)]:focus:ring-blur ring-[color:rgb(3,155,218,0.4)] focus:outline-none';\r\n\r\nexport const buttonSizeVariantStyles = {\r\n  large: 'py-1.5 px-4',\r\n  medium: 'py-1 px-3',\r\n  small: 'py-0 px-2.5',\r\n};\r\n\r\nconst buttonColorVariantStyles = {\r\n  primary: 'bg-[color:#039BDA] text-white border-[color:#039BDA]',\r\n  secondary: 'bg-white text-[color:#039BDA] border-[color:#039BDA]',\r\n};\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'button[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class? = '';\r\n\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'a[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonLinkComponent {\r\n  // @Input()\r\n  // disabled: boolean | null = false;\r\n\r\n  // @HostBinding('attr.disabled')\r\n  // get disabled_() {\r\n  //   return this.disabled ? '' : null;\r\n  // }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  // @Input()\r\n  // @HostBinding('attr.type')\r\n  // get type__() {\r\n  //   return 'button';\r\n  // }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @HostBinding('attr.class')\r\n  get class__() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  // @Input()\r\n  // href: string | null = null;\r\n\r\n  // @HostBinding('attr.href')\r\n  // @Input()\r\n  // get href__() {\r\n  //   return this.disabled || this.href === '' ? null : this.href;\r\n  // }\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'input[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonInputComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  @HostBinding('attr.value')\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.type')\r\n  get type_() {\r\n    return 'button';\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${\r\n      this.class\r\n    } ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @HostBinding('value')\r\n  get value() {\r\n    return this.label;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\nexport const ButtonArgTypes: ArgTypes = {\r\n  disabled: {\r\n    options: [true, false],\r\n    control: { type: 'boolean' },\r\n  },\r\n  variant: {\r\n    description: 'the variant of the type of the button, default value is \"primary\"',\r\n    options: Object.keys(buttonDisabledStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n  size: {\r\n    defaultValue: Object.keys(buttonSizeVariantStyles)[0],\r\n    description: 'the vertical size of the button, default value is \"large\"',\r\n    options: Object.keys(buttonSizeVariantStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled_": {
                    "name": "disabled_",
                    "getSignature": {
                        "name": "disabled_",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                },
                "class_": {
                    "name": "class_",
                    "getSignature": {
                        "name": "class_",
                        "type": "",
                        "returnType": "",
                        "line": 59
                    }
                }
            }
        },
        {
            "name": "ButtonComponentSB",
            "id": "component-ButtonComponentSB-5a7ae657d501264d9c531010a8e486a3dfbe84dafbff076f6656f9856931799026fc2f6f16d3f3bf2e2bb532503ab0b3c32651dea259d4c3c3eb439023a36d42",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 847,
                            "end": 861,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 848,
                                "end": 856,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n  imports: [CommonModule],\r\n})\r\nexport default class ButtonComponentSB {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "ButtonInputComponent",
            "id": "component-ButtonInputComponent-dcec6c8e1c08da5f7f41b43d18f99db9ef2fb168ed956fc26614f11ee846e215f31c613324dc7f3bf85cf86001aad871cb8e45da317687d66bc9e4ae0a9d7341",
            "file": "src/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "input[cpt-btn]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"label\">\n  {{ label }}\n</ng-container>\n<ng-container *ngIf=\"!label\">\n  <ng-content></ng-content>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "'block'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 157,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 145,
                    "type": "boolean | null",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 154,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 179,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 182,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 4420,
                            "end": 4428,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 4421,
                                "end": 4427,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "hidden"
                            },
                            "comment": ""
                        }
                    ],
                    "line": 167,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "attr.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 148,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "attr.type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 4327,
                            "end": 4335,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 4328,
                                "end": 4334,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "hidden"
                            },
                            "comment": ""
                        }
                    ],
                    "line": 161,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 174,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport type { ArgTypes } from '@storybook/angular';\r\n\r\nconst buttonDefaultStyles = 'min-w-[35px] border max-w-fit rounded';\r\n\r\nconst buttonActiveStyles = '[&:not(:disabled)]:active:shadow-inner2';\r\nexport const buttonDisabledStyles = {\r\n  primary:\r\n    'disabled:cursor-not-allowed  disabled:bg-[color:#999999] disabled:border-[color:#999999] disabled:text-white',\r\n  secondary:\r\n    'disabled:cursor-not-allowed  disabled:bg-white disabled:border-[color:#999999] disabled:text-[color:#999999]',\r\n};\r\nconst buttonFocusStyles = '[&:not(:disabled)]:focus:ring-blur ring-[color:rgb(3,155,218,0.4)] focus:outline-none';\r\n\r\nexport const buttonSizeVariantStyles = {\r\n  large: 'py-1.5 px-4',\r\n  medium: 'py-1 px-3',\r\n  small: 'py-0 px-2.5',\r\n};\r\n\r\nconst buttonColorVariantStyles = {\r\n  primary: 'bg-[color:#039BDA] text-white border-[color:#039BDA]',\r\n  secondary: 'bg-white text-[color:#039BDA] border-[color:#039BDA]',\r\n};\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'button[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class? = '';\r\n\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'a[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonLinkComponent {\r\n  // @Input()\r\n  // disabled: boolean | null = false;\r\n\r\n  // @HostBinding('attr.disabled')\r\n  // get disabled_() {\r\n  //   return this.disabled ? '' : null;\r\n  // }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  // @Input()\r\n  // @HostBinding('attr.type')\r\n  // get type__() {\r\n  //   return 'button';\r\n  // }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @HostBinding('attr.class')\r\n  get class__() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  // @Input()\r\n  // href: string | null = null;\r\n\r\n  // @HostBinding('attr.href')\r\n  // @Input()\r\n  // get href__() {\r\n  //   return this.disabled || this.href === '' ? null : this.href;\r\n  // }\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'input[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonInputComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  @HostBinding('attr.value')\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.type')\r\n  get type_() {\r\n    return 'button';\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${\r\n      this.class\r\n    } ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @HostBinding('value')\r\n  get value() {\r\n    return this.label;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\nexport const ButtonArgTypes: ArgTypes = {\r\n  disabled: {\r\n    options: [true, false],\r\n    control: { type: 'boolean' },\r\n  },\r\n  variant: {\r\n    description: 'the variant of the type of the button, default value is \"primary\"',\r\n    options: Object.keys(buttonDisabledStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n  size: {\r\n    defaultValue: Object.keys(buttonSizeVariantStyles)[0],\r\n    description: 'the vertical size of the button, default value is \"large\"',\r\n    options: Object.keys(buttonSizeVariantStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled_": {
                    "name": "disabled_",
                    "getSignature": {
                        "name": "disabled_",
                        "type": "",
                        "returnType": "",
                        "line": 148
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 174
                    }
                }
            }
        },
        {
            "name": "ButtonLinkComponent",
            "id": "component-ButtonLinkComponent-dcec6c8e1c08da5f7f41b43d18f99db9ef2fb168ed956fc26614f11ee846e215f31c613324dc7f3bf85cf86001aad871cb8e45da317687d66bc9e4ae0a9d7341",
            "file": "src/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "a[cpt-btn]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"label\">\n  {{ label }}\n</ng-container>\n<ng-container *ngIf=\"!label\">\n  <ng-content></ng-content>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "'block'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 125,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport type { ArgTypes } from '@storybook/angular';\r\n\r\nconst buttonDefaultStyles = 'min-w-[35px] border max-w-fit rounded';\r\n\r\nconst buttonActiveStyles = '[&:not(:disabled)]:active:shadow-inner2';\r\nexport const buttonDisabledStyles = {\r\n  primary:\r\n    'disabled:cursor-not-allowed  disabled:bg-[color:#999999] disabled:border-[color:#999999] disabled:text-white',\r\n  secondary:\r\n    'disabled:cursor-not-allowed  disabled:bg-white disabled:border-[color:#999999] disabled:text-[color:#999999]',\r\n};\r\nconst buttonFocusStyles = '[&:not(:disabled)]:focus:ring-blur ring-[color:rgb(3,155,218,0.4)] focus:outline-none';\r\n\r\nexport const buttonSizeVariantStyles = {\r\n  large: 'py-1.5 px-4',\r\n  medium: 'py-1 px-3',\r\n  small: 'py-0 px-2.5',\r\n};\r\n\r\nconst buttonColorVariantStyles = {\r\n  primary: 'bg-[color:#039BDA] text-white border-[color:#039BDA]',\r\n  secondary: 'bg-white text-[color:#039BDA] border-[color:#039BDA]',\r\n};\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'button[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class? = '';\r\n\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'a[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonLinkComponent {\r\n  // @Input()\r\n  // disabled: boolean | null = false;\r\n\r\n  // @HostBinding('attr.disabled')\r\n  // get disabled_() {\r\n  //   return this.disabled ? '' : null;\r\n  // }\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  // @Input()\r\n  // @HostBinding('attr.type')\r\n  // get type__() {\r\n  //   return 'button';\r\n  // }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @HostBinding('attr.class')\r\n  get class__() {\r\n    // eslint-disable-next-line prettier/prettier\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${this.class} ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  // @Input()\r\n  // href: string | null = null;\r\n\r\n  // @HostBinding('attr.href')\r\n  // @Input()\r\n  // get href__() {\r\n  //   return this.disabled || this.href === '' ? null : this.href;\r\n  // }\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'input[cpt-btn]',\r\n  template: `\r\n    <ng-container *ngIf=\"label\">\r\n      {{ label }}\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!label\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonInputComponent {\r\n  @Input()\r\n  disabled: boolean | null = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  get disabled_() {\r\n    return this.disabled ? '' : null;\r\n  }\r\n\r\n  @Input()\r\n  @HostBinding('attr.value')\r\n  label = '';\r\n\r\n  @Input()\r\n  class = 'block';\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.type')\r\n  get type_() {\r\n    return 'button';\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    return `${buttonDefaultStyles} ${buttonSizeVariantStyles[this.size]} ${buttonColorVariantStyles[this.variant]} ${\r\n      this.class\r\n    } ${buttonActiveStyles} ${buttonDisabledStyles[this.variant]} ${buttonFocusStyles} Button`;\r\n  }\r\n\r\n  @HostBinding('value')\r\n  get value() {\r\n    return this.label;\r\n  }\r\n\r\n  @Input()\r\n  size: keyof typeof buttonSizeVariantStyles = 'large';\r\n\r\n  @Input()\r\n  variant: keyof typeof buttonColorVariantStyles = 'primary';\r\n}\r\n\r\nexport const ButtonArgTypes: ArgTypes = {\r\n  disabled: {\r\n    options: [true, false],\r\n    control: { type: 'boolean' },\r\n  },\r\n  variant: {\r\n    description: 'the variant of the type of the button, default value is \"primary\"',\r\n    options: Object.keys(buttonDisabledStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n  size: {\r\n    defaultValue: Object.keys(buttonSizeVariantStyles)[0],\r\n    description: 'the vertical size of the button, default value is \"large\"',\r\n    options: Object.keys(buttonSizeVariantStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class__": {
                    "name": "class__",
                    "getSignature": {
                        "name": "class__",
                        "type": "",
                        "returnType": "",
                        "line": 110
                    }
                }
            }
        },
        {
            "name": "CheckboxInputComponent",
            "id": "component-CheckboxInputComponent-21a2786ff6166c1c36a5f21463672a8208d32bf5852d3e6a68e45d9b0a0785d44a6ae94e5b3d1e2c385c01ab65478e1bd8a02da3ffceb13c3bf40852f8ec0bb3",
            "file": "src/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "input[cpt-checkbox]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "type",
                    "defaultValue": "'checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.type'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "attr.type",
                    "defaultValue": "'checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'input[cpt-checkbox]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class CheckboxInputComponent {\r\n  @Input()\r\n  checked = false;\r\n\r\n  @HostBinding('attr.checked')\r\n  get checked_() {\r\n    return this.checked ? true : null;\r\n  }\r\n\r\n  @Input()\r\n  class = '';\r\n\r\n  @HostBinding('attr.type')\r\n  type = 'checkbox';\r\n\r\n  @Input()\r\n  @HostBinding('indeterminate')\r\n  @HostBinding('class.indeterminate')\r\n  indeterminate = false;\r\n  \r\n  get indeterminate_() {\r\n    // debugger;\r\n    // this.class = this.class + 'indeterminate'\r\n    return this.indeterminate ? true : null;\r\n  }\r\n\r\n  @HostBinding('attr.class')\r\n  get class_() {\r\n    return `absolute invisible h-0 w-0 ${this.class} Input`;\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n    // this.elementRef.nativeElement.indeterminate = this.indeterminate;\r\n    // this.class = `${this.class} ${this.indeterminate?'indeterminate':''}`;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "checked_": {
                    "name": "checked_",
                    "getSignature": {
                        "name": "checked_",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                },
                "indeterminate_": {
                    "name": "indeterminate_",
                    "getSignature": {
                        "name": "indeterminate_",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "class_": {
                    "name": "class_",
                    "getSignature": {
                        "name": "class_",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-7b75781575e4c24d919afd2cf7bc25df609b8f7b321b36026a14f50f408f4132c4a65319934da88cfa921298dc518a4b1250e931f7f4b7bf5e5da0b7d4da6681",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user?.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport ButtonComponentSB from './button.component';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user?.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            [primary]=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  imports: [ButtonComponentSB],\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-f871c8d869c3934f32152a95563ad93ac08c81814a19d8e8c72abf5374f71099cea7c7aa94dfe32f0884306a2baec3b80dc8373c00eed4da304d4998e6aa706d",
            "file": "src/components/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cpt-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding } from \"@angular/core\";\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'cpt-icon',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class IconComponent {\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `${this.class} Icon`;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            }
        },
        {
            "name": "InlineItemsContainerComponent",
            "id": "component-InlineItemsContainerComponent-26c060fbd53b4258939db6653b69130866e72fd72d76c16c6bf6711ce3a7d14f87caf0e4fc27256ace1b55110ae051e846507a4b8dc2b1029c6ef1c1643f239b",
            "file": "src/components/layout/inline-items-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[cpt-inline-items]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[cpt-inline-items]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class InlineItemsContainerComponent {\r\n  // @Input()\r\n  // checked = false;\r\n\r\n  // @HostBinding('attr.checked')\r\n  // get checked_() {\r\n  //   return this.checked ? true : null;\r\n  // }\r\n\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  // @HostBinding('attr.type')\r\n  // type = 'checkbox';\r\n\r\n  // @Input()\r\n  // @HostBinding('indeterminate')\r\n  // indeterminate = false;\r\n\r\n  // get indeterminate_() {\r\n  //   // debugger;\r\n  //   return this.indeterminate ? true : null;\r\n  // }\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `${this.class} [&>*]:inline-block InlineItemsContainer`;\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.elementRef.nativeElement.indeterminate = this.indeterminate;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            }
        },
        {
            "name": "InlineScrollableContainerComponent",
            "id": "component-InlineScrollableContainerComponent-ce730ca2fd67686c3d090e37dc61444b00302ac74be862c8f4aaa24be39ddfd601d7489db6fe02bd4c8dd27438bb0fa25910ef28ca1973532df58fe5cd1f307e",
            "file": "src/components/layout/inline-scrollable-container.component copy.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[cpt-inline-items]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n\r\n// var Classes = '';\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[cpt-inline-items]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class InlineScrollableContainerComponent {\r\n  // @Input()\r\n  // checked = false;\r\n\r\n  // @HostBinding('attr.checked')\r\n  // get checked_() {\r\n  //   return this.checked ? true : null;\r\n  // }\r\n\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  // @HostBinding('attr.type')\r\n  // type = 'checkbox';\r\n\r\n  // @Input()\r\n  // @HostBinding('indeterminate')\r\n  // indeterminate = false;\r\n\r\n  // get indeterminate_() {\r\n  //   // debugger;\r\n  //   return this.indeterminate ? true : null;\r\n  // }\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `${this.class} block overflow-auto whitespace-nowrap InlineScrollableContainer`;\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.elementRef.nativeElement.indeterminate = this.indeterminate;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            }
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-c0a6b735f943faed275095e4ef8dd7d0dbb2545e170fdb81524667823b78533478b8ae0ffb322b3fc733307eac45ccd000f9191720fac22692c8af5b3501f5b1",
            "file": "src/components/label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label[cpt-label]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding } from \"@angular/core\";\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'label[cpt-label]',\r\n  template: '<ng-content></ng-content>',\r\n  standalone: true,\r\n})\r\nexport class LabelComponent {\r\n  @HostBinding('class')\r\n  class = '';\r\n\r\n  constructor() {\r\n    // debugger\r\n    this.class = `${this.class} Label`;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            }
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-9c1111eb162d8d58143abe707f63313892c6b5fc179b75f6c11fc66ac56d5b67a73357df130fd18c2be1f2d8f1049c1cb4a5798dc84954a995252e911a76ba56",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport HeaderComponent from './header.component';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [HeaderComponent],\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    disabled: false,\r\n    variant: 'primary',\r\n    label: 'Button',\r\n  },\r\n  // parameters: {\r\n  //   controls: { exclude: /^input*/ },\r\n  // },\r\n}"
            },
            {
                "name": "buttonActiveStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[&:not(:disabled)]:active:shadow-inner2'"
            },
            {
                "name": "ButtonArgTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes",
                "defaultValue": "{\r\n  disabled: {\r\n    options: [true, false],\r\n    control: { type: 'boolean' },\r\n  },\r\n  variant: {\r\n    description: 'the variant of the type of the button, default value is \"primary\"',\r\n    options: Object.keys(buttonDisabledStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n  size: {\r\n    defaultValue: Object.keys(buttonSizeVariantStyles)[0],\r\n    description: 'the vertical size of the button, default value is \"large\"',\r\n    options: Object.keys(buttonSizeVariantStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n}"
            },
            {
                "name": "buttonColorVariantStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  primary: 'bg-[color:#039BDA] text-white border-[color:#039BDA]',\r\n  secondary: 'bg-white text-[color:#039BDA] border-[color:#039BDA]',\r\n}"
            },
            {
                "name": "buttonDefaultStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'min-w-[35px] border max-w-fit rounded'"
            },
            {
                "name": "buttonDisabledStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  primary:\r\n    'disabled:cursor-not-allowed  disabled:bg-[color:#999999] disabled:border-[color:#999999] disabled:text-white',\r\n  secondary:\r\n    'disabled:cursor-not-allowed  disabled:bg-white disabled:border-[color:#999999] disabled:text-[color:#999999]',\r\n}"
            },
            {
                "name": "buttonFocusStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[&:not(:disabled)]:focus:ring-blur ring-[color:rgb(3,155,218,0.4)] focus:outline-none'"
            },
            {
                "name": "ButtonInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ButtonLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button-link.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'primary',\r\n    label: 'Button',\r\n  },\r\n  // parameters: {\r\n  //   controls: { exclude: /^input*/ },\r\n  // },\r\n}"
            },
            {
                "name": "buttonSizeVariantStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  large: 'py-1.5 px-4',\r\n  medium: 'py-1 px-3',\r\n  small: 'py-0 px-2.5',\r\n}"
            },
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Classes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/layout/albatross-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'inline-block [&>*]:min-w-[clamp(var(--min-width,0px),(var(--breakpoint)-100%)*999,100%-var(--gutter,0px))]'"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxInputComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:checked~label>svg]:fill-black\" />\r\n    <label for=\"check1\" class=\"inline-block h-4 w-4 border border-black align-middle\">\r\n      <svg\r\n        class=\"fill-transparent stroke-black\"\r\n        focusable=\"false\"\r\n        aria-hidden=\"true\"\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"BookmarkBorderIcon\"\r\n      >\r\n        <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"></path>\r\n      </svg>\r\n    </label>\r\n    <label for=\"check1\" class=\"align-middle ml-1\">Label</label>\r\n  `,\r\n})"
            },
            {
                "name": "CustomIcon2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxInputComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:checked~label>svg]:fill-black\" />\r\n    <label for=\"check1\" class=\"flex gap-1 items-center \">\r\n      <svg\r\n        class=\"fill-transparent stroke-black h-4 w-4 border border-black\"\r\n        focusable=\"false\"\r\n        aria-hidden=\"true\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"></path>\r\n      </svg>\r\n      Label\r\n    </label>\r\n  `,\r\n})"
            },
            {
                "name": "CustomIcon3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxInputComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [indeterminate]=${args.indeterminate} [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:not(.indeterminate):checked~label_.checked]:block [&.indeterminate~label_i.indeterminate]:block\" />\r\n    <label for=\"check1\" class=\"flex gap-1 items-center \">\r\n      <label for=\"check1\" class=\"border border-black inline-block h-4 w-4\">\r\n        <i class=\"checked hidden leading-[14px] text-[13px] pis-[1px]\">✓</i>\r\n        <i class=\"indeterminate hidden leading-[12px] text-[15px] pis-[2px]\">−</i>\r\n      </label>\r\n      <span>Label</span>\r\n    </label>\r\n  `,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/layout/albatross-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Components/Buttons',\r\n  component: ButtonComponent,\r\n  argTypes: {\r\n    disabled: {\r\n      options: [true, false],\r\n      control: { type: 'boolean' },\r\n    },\r\n    variant: {\r\n      description: 'the variant of the type of the button, default value is \"primary\"',\r\n      options: Object.keys(buttonDisabledStyles),\r\n      control: { type: 'radio' },\r\n    },\r\n    size: {\r\n      description: 'the vertical size of the button, default value is \"large\"',\r\n      options: Object.keys(buttonSizeVariantStyles),\r\n      control: { type: 'radio' },\r\n    },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div class=\"p-2\">${story}</div>`),\r\n    // moduleMetadata({\r\n    //   imports:[ButtonComponent, ButtonLinkComponent, ButtonInputComponent]\r\n    // })\r\n  ],\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/button/button-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/layout/albatross-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n\r\n  template: templateTemplate,\r\n})"
            },
            {
                "name": "templateTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/layout/albatross-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n  <div class=\"CheckboxGroup\" style=\"flex-direction: column; display: flex\">\r\n    <label style=\"display: block\">Group Label</label>\r\n    <div cpt-albatross class=\"[column-gap:0.4rem] [&_.Checkbox>input]:mr-1\">\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp1\" />\r\n        <label for=\"cinp1\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp2\" />\r\n        <label for=\"cinp2\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp3\" />\r\n        <label for=\"cinp3\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp4\" />\r\n        <label for=\"cinp4\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp5\" />\r\n        <label for=\"cinp5\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp6\" />\r\n        <label for=\"cinp6\">Label</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`"
            },
            {
                "name": "Test2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxInputComponent>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: `\r\n  <input cpt-checkbox [checked]=\"${args.checked}\" />\r\n  This is a template test.`,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonLinkComponent>",
                "file": "src/components/button/button-link.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/components/button/button.component.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    disabled: false,\r\n    variant: 'primary',\r\n    label: 'Button',\r\n  },\r\n  // parameters: {\r\n  //   controls: { exclude: /^input*/ },\r\n  // },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Components/Buttons',\r\n  component: ButtonComponent,\r\n  argTypes: {\r\n    disabled: {\r\n      options: [true, false],\r\n      control: { type: 'boolean' },\r\n    },\r\n    variant: {\r\n      description: 'the variant of the type of the button, default value is \"primary\"',\r\n      options: Object.keys(buttonDisabledStyles),\r\n      control: { type: 'radio' },\r\n    },\r\n    size: {\r\n      description: 'the vertical size of the button, default value is \"large\"',\r\n      options: Object.keys(buttonSizeVariantStyles),\r\n      control: { type: 'radio' },\r\n    },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div class=\"p-2\">${story}</div>`),\r\n    // moduleMetadata({\r\n    //   imports:[ButtonComponent, ButtonLinkComponent, ButtonInputComponent]\r\n    // })\r\n  ],\r\n}"
                }
            ],
            "src/components/button/button.component.ts": [
                {
                    "name": "buttonActiveStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[&:not(:disabled)]:active:shadow-inner2'"
                },
                {
                    "name": "ButtonArgTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes",
                    "defaultValue": "{\r\n  disabled: {\r\n    options: [true, false],\r\n    control: { type: 'boolean' },\r\n  },\r\n  variant: {\r\n    description: 'the variant of the type of the button, default value is \"primary\"',\r\n    options: Object.keys(buttonDisabledStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n  size: {\r\n    defaultValue: Object.keys(buttonSizeVariantStyles)[0],\r\n    description: 'the vertical size of the button, default value is \"large\"',\r\n    options: Object.keys(buttonSizeVariantStyles),\r\n    control: { type: 'radio' },\r\n  },\r\n}"
                },
                {
                    "name": "buttonColorVariantStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  primary: 'bg-[color:#039BDA] text-white border-[color:#039BDA]',\r\n  secondary: 'bg-white text-[color:#039BDA] border-[color:#039BDA]',\r\n}"
                },
                {
                    "name": "buttonDefaultStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'min-w-[35px] border max-w-fit rounded'"
                },
                {
                    "name": "buttonDisabledStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  primary:\r\n    'disabled:cursor-not-allowed  disabled:bg-[color:#999999] disabled:border-[color:#999999] disabled:text-white',\r\n  secondary:\r\n    'disabled:cursor-not-allowed  disabled:bg-white disabled:border-[color:#999999] disabled:text-[color:#999999]',\r\n}"
                },
                {
                    "name": "buttonFocusStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[&:not(:disabled)]:focus:ring-blur ring-[color:rgb(3,155,218,0.4)] focus:outline-none'"
                },
                {
                    "name": "buttonSizeVariantStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  large: 'py-1.5 px-4',\r\n  medium: 'py-1 px-3',\r\n  small: 'py-0 px-2.5',\r\n}"
                }
            ],
            "src/components/button/button-input.component.stories.ts": [
                {
                    "name": "ButtonInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/components/button/button-link.component.stories.ts": [
                {
                    "name": "ButtonLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/button/button-link.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'primary',\r\n    label: 'Button',\r\n  },\r\n  // parameters: {\r\n  //   controls: { exclude: /^input*/ },\r\n  // },\r\n}"
                }
            ],
            "src/components/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxInputComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:checked~label>svg]:fill-black\" />\r\n    <label for=\"check1\" class=\"inline-block h-4 w-4 border border-black align-middle\">\r\n      <svg\r\n        class=\"fill-transparent stroke-black\"\r\n        focusable=\"false\"\r\n        aria-hidden=\"true\"\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"BookmarkBorderIcon\"\r\n      >\r\n        <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"></path>\r\n      </svg>\r\n    </label>\r\n    <label for=\"check1\" class=\"align-middle ml-1\">Label</label>\r\n  `,\r\n})"
                },
                {
                    "name": "CustomIcon2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxInputComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:checked~label>svg]:fill-black\" />\r\n    <label for=\"check1\" class=\"flex gap-1 items-center \">\r\n      <svg\r\n        class=\"fill-transparent stroke-black h-4 w-4 border border-black\"\r\n        focusable=\"false\"\r\n        aria-hidden=\"true\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"></path>\r\n      </svg>\r\n      Label\r\n    </label>\r\n  `,\r\n})"
                },
                {
                    "name": "CustomIcon3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxInputComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: /* HTML */ `\r\n    <input cpt-checkbox [indeterminate]=${args.indeterminate} [checked]=\"${args.checked}\" id=\"check1\" class=\"[&:not(.indeterminate):checked~label_.checked]:block [&.indeterminate~label_i.indeterminate]:block\" />\r\n    <label for=\"check1\" class=\"flex gap-1 items-center \">\r\n      <label for=\"check1\" class=\"border border-black inline-block h-4 w-4\">\r\n        <i class=\"checked hidden leading-[14px] text-[13px] pis-[1px]\">✓</i>\r\n        <i class=\"indeterminate hidden leading-[12px] text-[15px] pis-[2px]\">−</i>\r\n      </label>\r\n      <span>Label</span>\r\n    </label>\r\n  `,\r\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Test2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxInputComponent>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n  template: `\r\n  <input cpt-checkbox [checked]=\"${args.checked}\" />\r\n  This is a template test.`,\r\n})"
                }
            ],
            "src/components/layout/albatross-container.component.ts": [
                {
                    "name": "Classes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/layout/albatross-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'inline-block [&>*]:min-w-[clamp(var(--min-width,0px),(var(--breakpoint)-100%)*999,100%-var(--gutter,0px))]'"
                }
            ],
            "src/components/layout/albatross-container.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/layout/albatross-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/layout/albatross-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n\r\n  template: templateTemplate,\r\n})"
                },
                {
                    "name": "templateTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/layout/albatross-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n  <div class=\"CheckboxGroup\" style=\"flex-direction: column; display: flex\">\r\n    <label style=\"display: block\">Group Label</label>\r\n    <div cpt-albatross class=\"[column-gap:0.4rem] [&_.Checkbox>input]:mr-1\">\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp1\" />\r\n        <label for=\"cinp1\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp2\" />\r\n        <label for=\"cinp2\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp3\" />\r\n        <label for=\"cinp3\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp4\" />\r\n        <label for=\"cinp4\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp5\" />\r\n        <label for=\"cinp5\">Label</label>\r\n      </div>\r\n      <div class=\"Checkbox\">\r\n        <input type=\"checkbox\" name=\"groupName\" id=\"cinp6\" />\r\n        <label for=\"cinp6\">Label</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/components/button/button-link.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonLinkComponent>",
                    "file": "src/components/button/button-link.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/components/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button-link.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonActiveStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonArgTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonColorVariantStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonDefaultStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonDisabledStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonFocusStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonSizeVariantStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Test2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/components/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/albatross-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/albatross-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/albatross-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/albatross-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlbatrossContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/albatross-container.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Classes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/block-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlockContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/inline-items-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InlineItemsContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/layout/inline-scrollable-container.component copy.ts",
                "type": "component",
                "linktype": "component",
                "name": "InlineScrollableContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponentSB",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}